问题：
1.为何刚开始是big bang,提交一次后变了master
2.git commit并不会推送到远程仓库，只是在本地仓库？
3.每次修改都要先git add再git commit吗？ 是，git add会把当前对文件的修改推入暂存区，git commit只把暂存区的文件推入仓库。所以每次修改都需要先add
4.如何修改commit -m 提交时的注释？
5.commit 的-m选项？？
5.git init后git自动创建了master分支？其他分支如何创建？如何切换？与fork别人的分支有何不同？
----------------本地仓库-----------------
-1- git init
>初始化仓库
>此时当前目录下生成.git目录
>该目录包括：branches  config  description  HEAD  hooks  info  objects  refs
-2- git add 
    负责把指定文件放入暂存区
-3- git commit 
    负责把暂存区的指定文件放入仓库
>这里暂时只用了-m选项
>上传到仓库后：
 [master （根提交） 48f3356] try git init
 1 file changed, 5 insertions(+)
 create mode 100644 learn.txt
>TODO：详细学习下commit命令，可以指定注释对应的文件？不指定时是否是整体注释

-4- git status
> 用于查看仓库状态（哪些文件进行了修改，但不能给出具体的修改内容）
位于分支 master
尚未暂存以备提交的变更：
  （使用 "git add <文件>..." 更新要提交的内容）
  （使用 "git checkout -- <文件>..." 丢弃工作区的改动）

	修改：     learn.txt

修改尚未加入提交（使用 "git add" 和/或 "git commit -a"）

-5- git diff
> 查看文件修改内容

-6- git log
> 查看版本提交记录

-7- git reset 版本回退
> git reset --hard HEAD^
> git reset --hard <版本编号>
注意版本回退或切换后该时间线后的记录会消失（git log无法获得，可由git reflog获得版本号来切换）

-8- git reflog 查看历史操作

-9- git checkout -- <文件>
    撤销对工作区的修改(git checkout其实是用版本库里的版本替换工作区的版本)
    >场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
    >场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。   
    >场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库
    
-10- git rm

---------------远程仓库--------------

-11- git push
> git push -u origin <地址>
> -u选项关联本地仓库和远程仓库
> origin为远程仓库的默认名称

-12- git checkout -b <分支名>
> 创建分支
> -b 表示创建并切换
> 能不能仅创建不切换 ：可以 git branch <分支名> 然后再git checkout <分支名>切换到该分支

-13- git branch
> 不跟<分支名> 为查看当前在哪个分支
> 加<分支名> 为创建新分支

-14- 尝试在分支中修改





